diff --git a/Telegram/SourceFiles/historywidget.cpp b/Telegram/SourceFiles/historywidget.cpp
index 8cb33643..e181cb4a 100644
--- a/Telegram/SourceFiles/historywidget.cpp
+++ b/Telegram/SourceFiles/historywidget.cpp
@@ -62,6 +62,9 @@ Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
 #include "platform/platform_file_utilities.h"
 #include "auth_session.h"
 #include "window/notifications_manager.h"
+#ifdef USE_HUNSPELL
+	#include <hunspell.hxx>
+#endif
 
 namespace {
 
@@ -138,6 +141,91 @@ private:
 
 };
 
+#ifdef USE_HUNSPELL
+// Helper for Hunspell (spell checking)
+class HunspellHelper {
+public:
+	HunspellHelper(const QByteArray &lang) : _hunspell(nullptr), _codec(nullptr), _hunspellPath("/usr/share/hunspell/") {
+		const QByteArray affPath = _hunspellPath + lang + ".aff";
+		const QByteArray dicPath = _hunspellPath + lang + ".dic";
+		if (QFileInfo(affPath).exists() && QFileInfo(dicPath).exists()) {
+			_hunspell.reset(new Hunspell(affPath, dicPath));
+			_codec = QTextCodec::codecForName(_hunspell->get_dic_encoding());
+			if (!_codec) {
+				_hunspell.reset();
+			}
+		}
+	}
+
+	bool isOpen() const {
+		return (bool)_hunspell;
+	}
+
+	bool spell(const QStringRef &word) {
+		return _hunspell->spell(_codec->fromUnicode(word.data(), word.count()));
+	}
+
+private:
+	std::unique_ptr<Hunspell> _hunspell;
+	QTextCodec *_codec;
+
+	const QByteArray _hunspellPath;
+};
+
+// For spell checking in QTextEdit
+class SpellHighlighter : public QSyntaxHighlighter {
+public:
+	SpellHighlighter(QTextEdit *textEdit) : QSyntaxHighlighter(textEdit->document()) {}
+
+	void setSpellCheckers(QStringList languages) {
+		_hunspells.clear();
+		languages.removeDuplicates();
+		for (const QString &lang : languages) {
+			auto hunspell = std::unique_ptr<HunspellHelper>(new HunspellHelper(lang.toLatin1()));
+			if (hunspell->isOpen()) {
+				_hunspells.push_back(std::move(hunspell));
+			}
+		}
+	}
+
+private:
+	void highlightBlock(const QString &text) final {
+		if (_hunspells.empty())
+			return;
+
+		QTextCharFormat underlineFmt;
+		underlineFmt.setFontUnderline(true);
+		underlineFmt.setUnderlineColor(Qt::red);
+
+		const int textLen = text.length();
+		int beginIdx = 0;
+		for (int endIdx = 0; endIdx < textLen; ++endIdx) {
+			const bool letterAtBeginIdx = text[beginIdx].isLetter();
+			const bool letterAtEndIdx = text[endIdx].isLetter();
+			const bool atEnd = letterAtEndIdx && (endIdx == textLen - 1);
+			if (letterAtBeginIdx && (!letterAtEndIdx || atEnd)) {
+				const int wordLen = endIdx + atEnd - beginIdx;
+				const QStringRef word = text.midRef(beginIdx, wordLen);
+				if (word.length() > 1) {
+					bool correctWord = false;
+					for (auto &&hunspell : _hunspells) {
+						if (hunspell->spell(word)) {
+							correctWord = true;
+							break;
+						}
+					}
+					setFormat(beginIdx, wordLen, correctWord ? QTextCharFormat() : underlineFmt);
+				}
+			}
+			if (!letterAtBeginIdx || !letterAtEndIdx) {
+				beginIdx = endIdx + 1;
+			}
+		}
+	}
+
+	std::vector<std::unique_ptr<HunspellHelper>> _hunspells;
+};
+#endif
 
 } // namespace
 
@@ -2525,6 +2613,10 @@ void HistoryInner::onParentGeometryChanged() {
 MessageField::MessageField(HistoryWidget *history, const style::FlatTextarea &st, const QString &ph, const QString &val) : Ui::FlatTextarea(history, st, ph, val), history(history) {
 	setMinHeight(st::historySendSize.height() - 2 * st::historySendPadding);
 	setMaxHeight(st::historyComposeFieldMaxHeight);
+
+#ifdef USE_HUNSPELL
+	(new SpellHighlighter(this))->setSpellCheckers({QLocale::system().name(), "en_US"});
+#endif
 }
 
 bool MessageField::hasSendText() const {
diff --git a/Telegram/gyp/Telegram.gyp b/Telegram/gyp/Telegram.gyp
index 61303399..0a468787 100644
--- a/Telegram/gyp/Telegram.gyp
+++ b/Telegram/gyp/Telegram.gyp
@@ -86,6 +86,7 @@
       'TDESKTOP_DISABLE_AUTOUPDATE',
       'TDESKTOP_DISABLE_REGISTER_CUSTOM_SCHEME',
       'TDESKTOP_DISABLE_UNITY_INTEGRATION',
+      'USE_HUNSPELL',
     ],
 
     'include_dirs': [
diff --git a/Telegram/gyp/telegram_linux.gypi b/Telegram/gyp/telegram_linux.gypi
index 8cb43a04..a27e2b76 100644
--- a/Telegram/gyp/telegram_linux.gypi
+++ b/Telegram/gyp/telegram_linux.gypi
@@ -54,6 +54,7 @@
       'composeplatforminputcontextplugin',
       'ibusplatforminputcontextplugin',
       'fcitxplatforminputcontextplugin',
+      'hunspell',
       '<!(pkg-config 2> /dev/null --libs <@(pkgconfig_libs))',
     ],
     'cflags_cc': [
@@ -61,6 +62,7 @@
       '<!(pkg-config 2> /dev/null --cflags gtk+-2.0)',
       '<!(pkg-config 2> /dev/null --cflags glib-2.0)',
       '<!(pkg-config 2> /dev/null --cflags <@(pkgconfig_libs))',
+      '<!(pkg-config 2> /dev/null --cflags hunspell)',
     ],
     'configurations': {
       'Release': {
